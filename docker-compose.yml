version: '3.8'

services:
  # Banco de dados MySQL
  mysql:
    image: mysql:8.0
    container_name: portal_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: portal_nimoenergia
      MYSQL_USER: portal_user
      MYSQL_PASSWORD: portal_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/estrutura_completa.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/sample_data.sql:/docker-entrypoint-initdb.d/02-data.sql
    networks:
      - portal_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis para cache e rate limiting
  redis:
    image: redis:7-alpine
    container_name: portal_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - portal_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Flask
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: portal_backend
    restart: unless-stopped
    environment:
      # Database
      DATABASE_TYPE: mysql
      DATABASE_HOST: mysql
      DATABASE_USER: portal_user
      DATABASE_PASSWORD: portal_password
      DATABASE_NAME: portal_nimoenergia
      DATABASE_PORT: 3306
      
      # Redis
      REDIS_URL: redis://redis:6379/0
      
      # Security
      SECRET_KEY: dev-secret-key-change-in-production
      JWT_SECRET_KEY: dev-jwt-secret-change-in-production
      
      # App
      FLASK_ENV: development
      FLASK_DEBUG: "true"
      LOG_LEVEL: DEBUG
      
      # Upload
      UPLOAD_FOLDER: /app/uploads
      MAX_FILE_SIZE_MB: 50
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - portal_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React (desenvolvimento)
  frontend:
    image: node:18-alpine
    container_name: portal_frontend
    working_dir: /app
    environment:
      VITE_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    depends_on:
      - backend
    networks:
      - portal_network

  # Nginx (proxy reverso)
  nginx:
    image: nginx:alpine
    container_name: portal_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - uploads_data:/var/www/uploads
    depends_on:
      - backend
      - frontend
    networks:
      - portal_network

  # Adminer (interface web para banco)
  adminer:
    image: adminer:latest
    container_name: portal_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    networks:
      - portal_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  portal_network:
    driver: bridge

